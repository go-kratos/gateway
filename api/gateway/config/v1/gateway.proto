syntax = "proto3";

package gateway.config.v1;

option go_package = "github.com/go-kratos/gateway/api/gateway/config/v1";

import "google/protobuf/any.proto";
import "google/protobuf/duration.proto";

message Gateway {
    string name = 1;
    string version = 2;
    string address = 3;
    repeated string hosts = 4;
    repeated Endpoint endpoints = 5;
    repeated Middleware middlewares = 6;
    google.protobuf.Duration read_timeout = 7;
    google.protobuf.Duration read_header_timeout = 8;
    google.protobuf.Duration write_timeout = 9;
    google.protobuf.Duration idle_timeout = 10;
}

message Endpoint {
    string path = 1;
    string method = 2;
    string description = 3;
    Protocol protocol = 4;
    google.protobuf.Duration timeout = 5;
    repeated Middleware middlewares = 6;
    repeated Backend backends = 7;
    Retry retry = 8;
}

message Middleware {
    string name = 1;
    google.protobuf.Any options = 2;
}

message Backend {
    // localhost
    // 127.0.0.1:8000
    // discovery://service_name
    string target = 1;
    optional int64 weight = 2;
    HealthCheck health_check = 3;
    // static label filtering in the service discovery
    map<string, string> labels = 4;
}

enum Protocol {
    UNSPECIFIED = 0;
    HTTP = 1;
    GRPC = 2;
}

message HealthCheck {}

message Retry {
    // default attempts is 1
    uint32 attempts = 1;
    google.protobuf.Duration per_try_timeout = 2;
    repeated RetryCondition conditions = 3;
}

message RetryCondition {
    message header {
        string name = 1;
        string value = 2;
    }
    oneof condition {
        // "500-599", "429"
        string by_status_code = 1;
        // {"name": "grpc-status", "value": "14"}
        header by_header = 2;
    }
}
