# This is a gateway config.
name: helloworld
version: v1
hosts:
  - localhost
  - 127.0.0.1
middlewares:
  - name: logging
  - name: transcoder
  - name: cors
    options:
      '@type': type.googleapis.com/gateway.middleware.cors.v1.Cors
      allowCredentials: true
      allowOrigins:
        - .google.com
      allowMethods:
        - GET
        - POST
        - OPTIONS
  - name: rewrite
    options:
      '@type': type.googleapis.com/gateway.middleware.rewrite.v1.Rewrite
      pathRewrite: '/helloworld/status'
      requestHeadersRewrite:
        set: {"test2":"test2", "test3":"test3"}
        remove:
          - "test1"
        add: {"test4":"test4"}
      responseHeadersRewrite:
        set: { "restest2": "restest2", "restest3": "restest3" }
        remove:
          - "restest1"
        add: { "restest4": "restest4" }
  - name: otel
    options:
      '@type': type.googleapis.com/gateway.middleware.otel.v1.Otel
      httpEndpoint: 'localhost:4318' # default opentelemetry collector port
endpoints:
  - path: /helloworld/*
    timeout: 1s
    protocol: HTTP
    backends:
      - target: '127.0.0.1:8000'
    middlewares:
      - name: circuitbreaker
        options:
          '@type': type.googleapis.com/gateway.middleware.circuitbreaker.v1.CircuitBreaker
          successRatio: {"success":0.6, "request":"1", "bucket":"10", "window":"3s"}
          backupService: {"endpoint":{"backends":[{"target":"127.0.0.1:8001"}]}}
          assertCondtions:
          - {"by_status_code":"200"}
  - path: /helloworld.Greeter/*
    method: POST
    timeout: 1s
    protocol: GRPC
    backends:
      - target: '127.0.0.1:9000'
    retry:
      attempts: 3
      perTryTimeout: 0.1s
      conditions:
        - byStatusCode: '502-504'
        - byHeader:
            name: 'Grpc-Status'
            value: '14'
